>package com.example.kotlin
#^^^^^^^ source.kotlin keyword.other.kotlin
#       ^ source.kotlin
#        ^^^^^^^^^^^^^^^^^^^ source.kotlin entity.name.package.kotlin
>
>// #region imports
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>import java.util.Random as Rand
#^^^^^^ source.kotlin meta.import.kotlin keyword.other.import.kotlin
#      ^ source.kotlin meta.import.kotlin
#       ^^^^^^^^^^^^^^^^ source.kotlin meta.import.kotlin storage.modifier.import.java
#                       ^ source.kotlin meta.import.kotlin
#                        ^^ source.kotlin meta.import.kotlin keyword.other.kotlin
#                          ^ source.kotlin meta.import.kotlin
#                           ^^^^^ source.kotlin meta.import.kotlin entity.name.type
>import android.support.v7.app.AppCompatActivity
#^^^^^^ source.kotlin meta.import.kotlin keyword.other.import.kotlin
#      ^ source.kotlin meta.import.kotlin
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.kotlin meta.import.kotlin storage.modifier.import.java
>import org.amshove.kluent.`should equal` as Type
#^^^^^^ source.kotlin meta.import.kotlin keyword.other.import.kotlin
#      ^ source.kotlin meta.import.kotlin
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.kotlin meta.import.kotlin storage.modifier.import.java
#                                        ^ source.kotlin meta.import.kotlin
#                                         ^^ source.kotlin meta.import.kotlin keyword.other.kotlin
#                                           ^ source.kotlin meta.import.kotlin
#                                            ^^^^^ source.kotlin meta.import.kotlin entity.name.type
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region main
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>fun main(@NonNull args: Array<String>) {
#^^^ source.kotlin keyword.other.kotlin
#   ^ source.kotlin
#    ^^^^ source.kotlin entity.name.function.kotlin
#        ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#         ^^^^^^^^ source.kotlin meta.group.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                 ^ source.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                  ^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                      ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                       ^ source.kotlin meta.group.kotlin
#                        ^^^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                             ^ source.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
#                              ^^^^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                    ^ source.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
#                                     ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                      ^ source.kotlin
#                                       ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    println("Hello Kotlin! ${/*test*/}")
#^^^^ source.kotlin meta.block.kotlin
#    ^^^^^^^ source.kotlin meta.block.kotlin support.function.kotlin
#           ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#            ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#             ^^^^^^^^^^^^^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin
#                           ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin punctuation.definition.keyword.kotlin
#                            ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin punctuation.section.block.begin.kotlin
#                             ^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin comment.block.kotlin punctuation.definition.comment.kotlin
#                               ^^^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin comment.block.kotlin
#                                   ^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin comment.block.kotlin punctuation.definition.comment.kotlin
#                                     ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin punctuation.section.block.end.kotlin
#                                      ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                       ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>
>    val map = mutableMapOf("A" to "B")
#^^^^ source.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.block.kotlin storage.type.kotlin
#       ^^^^^ source.kotlin meta.block.kotlin
#            ^ source.kotlin meta.block.kotlin keyword.operator.assignment.kotlin
#             ^ source.kotlin meta.block.kotlin
#              ^^^^^^^^^^^^ source.kotlin meta.block.kotlin support.function.kotlin
#                          ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                           ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                            ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin
#                             ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                              ^^^^ source.kotlin meta.block.kotlin meta.group.kotlin
#                                  ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                   ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin
#                                    ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                     ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>
>    thing.apply("random string here \n\t\r")
#^^^^^^^^^ source.kotlin meta.block.kotlin
#         ^ source.kotlin meta.block.kotlin punctuation.accessor.dot.kotlin
#          ^^^^^ source.kotlin meta.block.kotlin support.function.kotlin
#               ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                 ^^^^^^^^^^^^^^^^^^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin
#                                    ^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin constant.character.escape.kotlin
#                                      ^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin constant.character.escape.kotlin
#                                        ^^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin constant.character.escape.kotlin
#                                          ^ source.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                           ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>    thing.let { test: ->    }
#^^^^^^^^^ source.kotlin meta.block.kotlin
#         ^ source.kotlin meta.block.kotlin punctuation.accessor.dot.kotlin
#          ^^^ source.kotlin meta.block.kotlin support.function.kotlin
#             ^ source.kotlin meta.block.kotlin
#              ^ source.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
#               ^^^^^ source.kotlin meta.block.kotlin meta.block.kotlin
#                    ^ source.kotlin meta.block.kotlin meta.block.kotlin keyword.operator.declaration.kotlin
#                     ^ source.kotlin meta.block.kotlin meta.block.kotlin
#                      ^ source.kotlin meta.block.kotlin meta.block.kotlin keyword.operator.arithmetic.kotlin
#                       ^ source.kotlin meta.block.kotlin meta.block.kotlin keyword.operator.comparison.kotlin
#                        ^^^^ source.kotlin meta.block.kotlin meta.block.kotlin
#                            ^ source.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>    val string = "${getThing()}"
#^^^^ source.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.block.kotlin storage.type.kotlin
#       ^^^^^^^^ source.kotlin meta.block.kotlin
#               ^ source.kotlin meta.block.kotlin keyword.operator.assignment.kotlin
#                ^ source.kotlin meta.block.kotlin
#                 ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                  ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin punctuation.definition.keyword.kotlin
#                   ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin punctuation.section.block.begin.kotlin
#                    ^^^^^^^^ source.kotlin meta.block.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin
#                            ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                             ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                              ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin entity.string.template.element.kotlin punctuation.section.block.end.kotlin
#                               ^ source.kotlin meta.block.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
>}
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region variables
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>val items = listOf("apple", "banana", "kiwifruit")
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^ source.kotlin
#          ^ source.kotlin keyword.operator.assignment.kotlin
#           ^ source.kotlin
#            ^^^^^^ source.kotlin support.function.kotlin
#                  ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                   ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                    ^^^^^ source.kotlin meta.group.kotlin string.quoted.double.kotlin
#                         ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                          ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                           ^ source.kotlin meta.group.kotlin
#                            ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                             ^^^^^^ source.kotlin meta.group.kotlin string.quoted.double.kotlin
#                                   ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                    ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                     ^ source.kotlin meta.group.kotlin
#                                      ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                       ^^^^^^^^^ source.kotlin meta.group.kotlin string.quoted.double.kotlin
#                                                ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                                 ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>var x = 9
#^^^ source.kotlin storage.type.kotlin
#   ^^^ source.kotlin
#      ^ source.kotlin keyword.operator.assignment.kotlin
#       ^ source.kotlin
#        ^ source.kotlin constant.numeric.integer.kotlin
>const val CONSTANT = 99
#^^^^^ source.kotlin storage.modifier.kotlin
#     ^ source.kotlin
#      ^^^ source.kotlin storage.type.kotlin
#         ^ source.kotlin
#          ^^^^^^^^ source.kotlin entity.name.type.class.kotlin
#                  ^ source.kotlin
#                   ^ source.kotlin keyword.operator.assignment.kotlin
#                    ^ source.kotlin
#                     ^^ source.kotlin constant.numeric.integer.kotlin
>
>@get:Rule
#^^^^^^^^^^ source.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
>val activityRule = ActivityTestRule(SplashActivity::class.java)
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^^^^^^ source.kotlin
#                 ^ source.kotlin keyword.operator.assignment.kotlin
#                  ^ source.kotlin
#                   ^^^^^^^^^^^^^^^^ source.kotlin entity.name.type.class.kotlin
#                                   ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                    ^^^^^^^^^^^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                  ^^ source.kotlin meta.group.kotlin punctuation.accessor.reference.kotlin
#                                                    ^^^^^ source.kotlin meta.group.kotlin constant.language.kotlin
#                                                         ^ source.kotlin meta.group.kotlin punctuation.accessor.dot.kotlin
#                                                          ^^^^ source.kotlin meta.group.kotlin
#                                                              ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region numeric
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>val oneMillion = 1_000_000
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^^^^ source.kotlin
#               ^ source.kotlin keyword.operator.assignment.kotlin
#                ^ source.kotlin
#                 ^^^^^^^^^ source.kotlin constant.numeric.integer.kotlin
>val creditCardNumber = 1234_5678_9012_3456L
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^^^^^^^^^^ source.kotlin
#                     ^ source.kotlin keyword.operator.assignment.kotlin
#                      ^ source.kotlin
#                       ^^^^^^^^^^^^^^^^^^^^ source.kotlin constant.numeric.integer.kotlin
>val socialSecurityNumber = 999_99_9999L
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^^^^^^^^^^^^^^ source.kotlin
#                         ^ source.kotlin keyword.operator.assignment.kotlin
#                          ^ source.kotlin
#                           ^^^^^^^^^^^^ source.kotlin constant.numeric.integer.kotlin
>val hexBytes = 0xFF_EC_DE_5E
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^^ source.kotlin
#             ^ source.kotlin keyword.operator.assignment.kotlin
#              ^ source.kotlin
#               ^^^^^^^^^^^^^ source.kotlin constant.numeric.hex.kotlin
>val float = 0.043_331F
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^ source.kotlin
#          ^ source.kotlin keyword.operator.assignment.kotlin
#           ^ source.kotlin
#            ^^^^^^^^^^ source.kotlin constant.numeric.float.kotlin
>val bytes = 0b11010010_01101001_10010100_10010010
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^ source.kotlin
#          ^ source.kotlin keyword.operator.assignment.kotlin
#           ^ source.kotlin
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.kotlin constant.numeric.binary.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region conditionals
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>if(test == "") {
#^^ source.kotlin keyword.control.conditional.kotlin
#  ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#   ^^^^^ source.kotlin meta.group.kotlin
#        ^^ source.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
#          ^ source.kotlin meta.group.kotlin
#           ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#            ^ source.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#             ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#              ^ source.kotlin
#               ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    1 and 2 not 3
#^^^^ source.kotlin meta.block.kotlin
#    ^ source.kotlin meta.block.kotlin constant.numeric.integer.kotlin
#     ^ source.kotlin meta.block.kotlin
#      ^^^ source.kotlin meta.block.kotlin keyword.operator.bitwise.kotlin
#         ^ source.kotlin meta.block.kotlin
#          ^ source.kotlin meta.block.kotlin constant.numeric.integer.kotlin
#           ^ source.kotlin meta.block.kotlin
#            ^^^ source.kotlin meta.block.kotlin keyword.operator.bitwise.kotlin
#               ^ source.kotlin meta.block.kotlin
#                ^ source.kotlin meta.block.kotlin constant.numeric.integer.kotlin
>} else {
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
# ^ source.kotlin
#  ^^^^ source.kotlin keyword.control.conditional.kotlin
#      ^ source.kotlin
#       ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    
>}
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region functions
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>fun <T> foo() {
#^^^ source.kotlin keyword.other.kotlin
#   ^ source.kotlin
#    ^ source.kotlin keyword.operator.comparison.kotlin
#     ^ source.kotlin entity.name.function.kotlin
#      ^ source.kotlin keyword.operator.comparison.kotlin
#       ^ source.kotlin
#        ^^^ source.kotlin entity.name.function.kotlin
#           ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#            ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#             ^ source.kotlin
#              ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    val x  = Bar::class
#^^^^ source.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.block.kotlin storage.type.kotlin
#       ^^^^ source.kotlin meta.block.kotlin
#           ^ source.kotlin meta.block.kotlin keyword.operator.assignment.kotlin
#            ^ source.kotlin meta.block.kotlin
#             ^^^ source.kotlin meta.block.kotlin entity.name.type.class.kotlin
#                ^^ source.kotlin meta.block.kotlin punctuation.accessor.reference.kotlin
#                  ^^^^^ source.kotlin meta.block.kotlin constant.language.kotlin
>    val y = hello?.test
#^^^^ source.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.block.kotlin storage.type.kotlin
#       ^^^ source.kotlin meta.block.kotlin
#          ^ source.kotlin meta.block.kotlin keyword.operator.assignment.kotlin
#           ^^^^^^ source.kotlin meta.block.kotlin
#                 ^^ source.kotlin meta.block.kotlin punctuation.accessor.dot.safe.kotlin
#                   ^^^^^ source.kotlin meta.block.kotlin
>}
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>suspend fun <T, U> SequenceBuilder<Int>.yieldIfOdd(x: Int) {
#^^^^^^^ source.kotlin storage.modifier.kotlin
#       ^ source.kotlin
#        ^^^ source.kotlin keyword.other.kotlin
#           ^ source.kotlin
#            ^ source.kotlin keyword.operator.comparison.kotlin
#             ^ source.kotlin entity.name.function.kotlin
#              ^ source.kotlin punctuation.seperator.kotlin
#               ^ source.kotlin
#                ^ source.kotlin entity.name.function.kotlin
#                 ^ source.kotlin keyword.operator.comparison.kotlin
#                  ^ source.kotlin
#                   ^^^^^^^^^^^^^^^^^^^^^ source.kotlin
#                                        ^^^^^^^^^^ source.kotlin entity.name.function.kotlin
#                                                  ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                                   ^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                    ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                     ^ source.kotlin meta.group.kotlin
#                                                      ^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                                         ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                          ^ source.kotlin
#                                                           ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    if (x % 2 != 0) yield(x)
#^^^^ source.kotlin meta.block.kotlin
#    ^^ source.kotlin meta.block.kotlin keyword.control.conditional.kotlin
#      ^ source.kotlin meta.block.kotlin
#       ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#        ^^ source.kotlin meta.block.kotlin meta.group.kotlin
#          ^ source.kotlin meta.block.kotlin meta.group.kotlin keyword.operator.arithmetic.kotlin
#           ^ source.kotlin meta.block.kotlin meta.group.kotlin
#            ^ source.kotlin meta.block.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#             ^ source.kotlin meta.block.kotlin meta.group.kotlin
#              ^^ source.kotlin meta.block.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
#                ^ source.kotlin meta.block.kotlin meta.group.kotlin
#                 ^ source.kotlin meta.block.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#                  ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                   ^ source.kotlin meta.block.kotlin
#                    ^^^^^ source.kotlin meta.block.kotlin storage.modifier.kotlin
#                         ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                          ^ source.kotlin meta.block.kotlin meta.group.kotlin
#                           ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>}
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>val function = fun(@Inject x: Int, y: Int, lamda: (A, B) -> Unit): Int {
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^^ source.kotlin
#             ^ source.kotlin keyword.operator.assignment.kotlin
#              ^ source.kotlin
#               ^^^ source.kotlin keyword.other.kotlin
#                  ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                   ^^^^^^^ source.kotlin meta.group.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                          ^ source.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                           ^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                            ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                             ^ source.kotlin meta.group.kotlin
#                              ^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                 ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                  ^ source.kotlin meta.group.kotlin
#                                   ^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                    ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                     ^ source.kotlin meta.group.kotlin
#                                      ^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                         ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                          ^ source.kotlin meta.group.kotlin
#                                           ^^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                 ^ source.kotlin meta.group.kotlin
#                                                  ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                                   ^ source.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                                                    ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                                     ^ source.kotlin meta.group.kotlin
#                                                      ^ source.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                                                       ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                        ^ source.kotlin meta.group.kotlin
#                                                         ^ source.kotlin meta.group.kotlin keyword.operator.arithmetic.kotlin
#                                                          ^ source.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
#                                                           ^ source.kotlin meta.group.kotlin
#                                                            ^^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                                                ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                                 ^ source.kotlin keyword.operator.declaration.kotlin
#                                                                  ^ source.kotlin
#                                                                   ^^^ source.kotlin support.class.kotlin
#                                                                      ^ source.kotlin
#                                                                       ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    test.test()
#^^^^^^^^ source.kotlin meta.block.kotlin
#        ^ source.kotlin meta.block.kotlin punctuation.accessor.dot.kotlin
#         ^^^^ source.kotlin meta.block.kotlin
#             ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#              ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>    return x + y;
#^^^^ source.kotlin meta.block.kotlin
#    ^^^^^^ source.kotlin meta.block.kotlin keyword.control.kotlin
#          ^^^ source.kotlin meta.block.kotlin
#             ^ source.kotlin meta.block.kotlin keyword.operator.arithmetic.kotlin
#              ^^ source.kotlin meta.block.kotlin
#                ^ source.kotlin meta.block.kotlin punctuation.terminator.kotlin
>}
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>abstract fun onCreate(savedInstanceState: Bundle?)
#^^^^^^^^ source.kotlin storage.modifier.kotlin
#        ^ source.kotlin
#         ^^^ source.kotlin keyword.other.kotlin
#            ^ source.kotlin
#             ^^^^^^^^ source.kotlin entity.name.function.kotlin
#                     ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                      ^^^^^^^^^^^^^^^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                        ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                         ^ source.kotlin meta.group.kotlin
#                                          ^^^^^^ source.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                                                ^ source.kotlin meta.group.kotlin
#                                                 ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>
>fun isOdd(x: Int) = x % 2 != 0
#^^^ source.kotlin keyword.other.kotlin
#   ^ source.kotlin
#    ^^^^^ source.kotlin entity.name.function.kotlin
#         ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#          ^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#           ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#            ^ source.kotlin meta.group.kotlin
#             ^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                 ^ source.kotlin
#                  ^ source.kotlin keyword.operator.assignment.kotlin
#                   ^^^ source.kotlin
#                      ^ source.kotlin keyword.operator.arithmetic.kotlin
#                       ^ source.kotlin
#                        ^ source.kotlin constant.numeric.integer.kotlin
#                         ^ source.kotlin
#                          ^^ source.kotlin keyword.operator.comparison.kotlin
#                            ^ source.kotlin
#                             ^ source.kotlin constant.numeric.integer.kotlin
>fun isOdd(s: String) = s == "brillig" || s == "slithy" || s == "tove"
#^^^ source.kotlin keyword.other.kotlin
#   ^ source.kotlin
#    ^^^^^ source.kotlin entity.name.function.kotlin
#         ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#          ^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#           ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#            ^ source.kotlin meta.group.kotlin
#             ^^^^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                   ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                    ^ source.kotlin
#                     ^ source.kotlin keyword.operator.assignment.kotlin
#                      ^^^ source.kotlin
#                         ^^ source.kotlin keyword.operator.comparison.kotlin
#                           ^ source.kotlin
#                            ^ source.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                             ^^^^^^^ source.kotlin string.quoted.double.kotlin
#                                    ^ source.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                     ^ source.kotlin
#                                      ^^ source.kotlin keyword.operator.logical.kotlin
#                                        ^^^ source.kotlin
#                                           ^^ source.kotlin keyword.operator.comparison.kotlin
#                                             ^ source.kotlin
#                                              ^ source.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                               ^^^^^^ source.kotlin string.quoted.double.kotlin
#                                                     ^ source.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                                      ^ source.kotlin
#                                                       ^^ source.kotlin keyword.operator.logical.kotlin
#                                                         ^^^ source.kotlin
#                                                            ^^ source.kotlin keyword.operator.comparison.kotlin
#                                                              ^ source.kotlin
#                                                               ^ source.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                                                ^^^^ source.kotlin string.quoted.double.kotlin
#                                                                    ^ source.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
>
>val numbers = listOf(1, 2, 3)
#^^^ source.kotlin storage.type.kotlin
#   ^^^^^^^^^ source.kotlin
#            ^ source.kotlin keyword.operator.assignment.kotlin
#             ^ source.kotlin
#              ^^^^^^ source.kotlin support.function.kotlin
#                    ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                     ^ source.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#                      ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                       ^ source.kotlin meta.group.kotlin
#                        ^ source.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#                         ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                          ^ source.kotlin meta.group.kotlin
#                           ^ source.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#                            ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>println(numbers.filter(::isOdd))
#^^^^^^^ source.kotlin support.function.kotlin
#       ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#        ^^^^^^^ source.kotlin meta.group.kotlin
#               ^ source.kotlin meta.group.kotlin punctuation.accessor.dot.kotlin
#                ^^^^^^ source.kotlin meta.group.kotlin
#                      ^ source.kotlin meta.group.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                       ^^ source.kotlin meta.group.kotlin meta.group.kotlin punctuation.accessor.reference.kotlin
#                         ^^^^^ source.kotlin meta.group.kotlin meta.group.kotlin
#                              ^ source.kotlin meta.group.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                               ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region control
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>fun foo(node: Node?): String? {
#^^^ source.kotlin keyword.other.kotlin
#   ^ source.kotlin
#    ^^^ source.kotlin entity.name.function.kotlin
#       ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#        ^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#            ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#             ^ source.kotlin meta.group.kotlin
#              ^^^^ source.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                  ^ source.kotlin meta.group.kotlin
#                   ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                    ^ source.kotlin keyword.operator.declaration.kotlin
#                     ^ source.kotlin
#                      ^^^^^^^ source.kotlin support.class.kotlin
#                             ^ source.kotlin
#                              ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    val parent = node.getParent() ?: return null
#^^^^ source.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.block.kotlin storage.type.kotlin
#       ^^^^^^^^ source.kotlin meta.block.kotlin
#               ^ source.kotlin meta.block.kotlin keyword.operator.assignment.kotlin
#                ^^^^^ source.kotlin meta.block.kotlin
#                     ^ source.kotlin meta.block.kotlin punctuation.accessor.dot.kotlin
#                      ^^^^^^^^^ source.kotlin meta.block.kotlin
#                               ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                 ^ source.kotlin meta.block.kotlin
#                                  ^^ source.kotlin meta.block.kotlin keyword.operator.elvis.kotlin
#                                    ^ source.kotlin meta.block.kotlin
#                                     ^^^^^^ source.kotlin meta.block.kotlin keyword.control.kotlin
#                                           ^ source.kotlin meta.block.kotlin
#                                            ^^^^ source.kotlin meta.block.kotlin constant.language.kotlin
>}
#^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region classes
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>interface Greetable {
#^^^^^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#         ^ source.kotlin meta.class.kotlin
#          ^^^^^^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                   ^ source.kotlin meta.class.kotlin
#                    ^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    fun greet()
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.class.kotlin meta.block.kotlin keyword.other.kotlin
#       ^ source.kotlin meta.class.kotlin meta.block.kotlin
#        ^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin entity.name.function.kotlin
#             ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#              ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>}
#^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>open class Greeter: Greetable {
#^^^^ source.kotlin storage.modifier.kotlin
#    ^ source.kotlin
#     ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#          ^ source.kotlin meta.class.kotlin
#           ^^^^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                  ^ source.kotlin meta.class.kotlin keyword.operator.declaration.kotlin
#                   ^ source.kotlin meta.class.kotlin
#                    ^^^^^^^^^ source.kotlin meta.class.kotlin entity.other.inherited-class.kotlin
#                             ^ source.kotlin meta.class.kotlin
#                              ^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    companion object {
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin storage.type.kotlin
#             ^ source.kotlin meta.class.kotlin meta.block.kotlin
#              ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin storage.type.kotlin
#                    ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                     ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>        private const val GREETING = "Hello, World!"
#^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#        ^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin storage.modifier.kotlin
#               ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#                ^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin storage.modifier.kotlin
#                     ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#                      ^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin storage.type.kotlin
#                         ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#                          ^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin entity.name.type.class.kotlin
#                                  ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin keyword.operator.assignment.kotlin
#                                    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#                                     ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                      ^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin string.quoted.double.kotlin
#                                                   ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
>    }
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>    
>    override fun greet() {
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin storage.modifier.kotlin
#            ^ source.kotlin meta.class.kotlin meta.block.kotlin
#             ^^^ source.kotlin meta.class.kotlin meta.block.kotlin keyword.other.kotlin
#                ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                 ^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin entity.name.function.kotlin
#                      ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                       ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                        ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                         ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>        println(GREETING)
#^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#        ^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin support.function.kotlin
#               ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                ^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                        ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>    }
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>}
#^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region expect/actual
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>expect class Foo(bar: String) {
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#            ^ source.kotlin meta.class.kotlin
#             ^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                 ^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                    ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                     ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                      ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                            ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                             ^ source.kotlin meta.class.kotlin
#                              ^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    fun frob() 
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^ source.kotlin meta.class.kotlin meta.block.kotlin keyword.other.kotlin
#       ^ source.kotlin meta.class.kotlin meta.block.kotlin
#        ^^^^ source.kotlin meta.class.kotlin meta.block.kotlin entity.name.function.kotlin
#            ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#             ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#              ^ source.kotlin meta.class.kotlin meta.block.kotlin
>}
#^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>actual class Foo actual constructor(val bar: String) {
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#            ^ source.kotlin meta.class.kotlin
#             ^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                ^ source.kotlin meta.class.kotlin
#                 ^^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#                       ^ source.kotlin meta.class.kotlin
#                        ^^^^^^^^^^^ source.kotlin meta.class.kotlin entity.name.function.constructor
#                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                    ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                       ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                        ^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                           ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                            ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                             ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                    ^ source.kotlin meta.class.kotlin
#                                                     ^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>    actual fun frob() {
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin storage.modifier.kotlin
#          ^ source.kotlin meta.class.kotlin meta.block.kotlin
#           ^^^ source.kotlin meta.class.kotlin meta.block.kotlin keyword.other.kotlin
#              ^ source.kotlin meta.class.kotlin meta.block.kotlin
#               ^^^^ source.kotlin meta.class.kotlin meta.block.kotlin entity.name.function.kotlin
#                   ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                     ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                      ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>        println("Frobbing the $bar")
#^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#        ^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin support.function.kotlin
#               ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                 ^^^^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin
#                                  ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>    }
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>}
#^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>expect fun formatString(source: String, vararg args: Any): String
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^ source.kotlin keyword.other.kotlin
#          ^ source.kotlin
#           ^^^^^^^^^^^^ source.kotlin entity.name.function.kotlin
#                       ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                        ^^^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                              ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                               ^ source.kotlin meta.group.kotlin
#                                ^^^^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                      ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                       ^ source.kotlin meta.group.kotlin
#                                        ^^^^^^ source.kotlin meta.group.kotlin storage.modifier.kotlin
#                                              ^ source.kotlin meta.group.kotlin
#                                               ^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                   ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                    ^ source.kotlin meta.group.kotlin
#                                                     ^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                                        ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                         ^ source.kotlin keyword.operator.declaration.kotlin
#                                                          ^ source.kotlin
#                                                           ^^^^^^ source.kotlin support.class.kotlin
>expect annotation class Test
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^^^^^^^^ source.kotlin storage.modifier.kotlin
#                 ^ source.kotlin
#                  ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#                       ^ source.kotlin meta.class.kotlin
#                        ^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
>
>actual fun formatString(source: String, vararg args: Any) = String.format(source, args)
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^ source.kotlin keyword.other.kotlin
#          ^ source.kotlin
#           ^^^^^^^^^^^^ source.kotlin entity.name.function.kotlin
#                       ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                        ^^^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                              ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                               ^ source.kotlin meta.group.kotlin
#                                ^^^^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                      ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                       ^ source.kotlin meta.group.kotlin
#                                        ^^^^^^ source.kotlin meta.group.kotlin storage.modifier.kotlin
#                                              ^ source.kotlin meta.group.kotlin
#                                               ^^^^ source.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                   ^ source.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                    ^ source.kotlin meta.group.kotlin
#                                                     ^^^ source.kotlin meta.group.kotlin support.class.kotlin
#                                                        ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                         ^ source.kotlin
#                                                          ^ source.kotlin keyword.operator.assignment.kotlin
#                                                           ^ source.kotlin
#                                                            ^^^^^^ source.kotlin support.class.kotlin
#                                                                  ^ source.kotlin punctuation.accessor.dot.kotlin
#                                                                   ^^^^^^ source.kotlin
#                                                                         ^ source.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                                                          ^^^^^^ source.kotlin meta.group.kotlin
#                                                                                ^ source.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                                                                 ^^^^^ source.kotlin meta.group.kotlin
#                                                                                      ^ source.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>actual typealias Test = org.junit.Test
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^^^^^^^ source.kotlin storage.type.kotlin
#                ^ source.kotlin
#                 ^^^^ source.kotlin entity.name.type.class.kotlin
#                     ^ source.kotlin
#                      ^ source.kotlin keyword.operator.assignment.kotlin
#                       ^ source.kotlin
#                        ^^^^^^^^^^^^^^ source.kotlin entity.name.type.class.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region sealed-class
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>sealed class Expr
#^^^^^^ source.kotlin storage.modifier.kotlin
#      ^ source.kotlin
#       ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#            ^ source.kotlin meta.class.kotlin
#             ^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
>data class Const(val number: Double) : Expr()
#^^^^ source.kotlin storage.type.kotlin
#    ^ source.kotlin
#     ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#          ^ source.kotlin meta.class.kotlin
#           ^^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                 ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                    ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                     ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                           ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                            ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                             ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                    ^ source.kotlin meta.class.kotlin
#                                     ^ source.kotlin meta.class.kotlin keyword.operator.declaration.kotlin
#                                      ^ source.kotlin meta.class.kotlin
#                                       ^^^^ source.kotlin meta.class.kotlin entity.other.inherited-class.kotlin
#                                           ^ source.kotlin meta.class.kotlin punctuation.section.group.begin.kotlin
#                                            ^ source.kotlin meta.class.kotlin punctuation.section.group.end.kotlin
>data class Sum(val e1: Expr, val e2: Expr) : Expr()
#^^^^ source.kotlin storage.type.kotlin
#    ^ source.kotlin
#     ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#          ^ source.kotlin meta.class.kotlin
#           ^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#              ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#               ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                  ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                   ^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                     ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                      ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                       ^^^^ source.kotlin meta.class.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                           ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                            ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                             ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                 ^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                    ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                     ^^^^ source.kotlin meta.class.kotlin meta.group.kotlin entity.name.type.class.kotlin
#                                         ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                          ^ source.kotlin meta.class.kotlin
#                                           ^ source.kotlin meta.class.kotlin keyword.operator.declaration.kotlin
#                                            ^ source.kotlin meta.class.kotlin
#                                             ^^^^ source.kotlin meta.class.kotlin entity.other.inherited-class.kotlin
#                                                 ^ source.kotlin meta.class.kotlin punctuation.section.group.begin.kotlin
#                                                  ^ source.kotlin meta.class.kotlin punctuation.section.group.end.kotlin
>object NotANumber : Expr()
#^^^^^^ source.kotlin meta.class.kotlin storage.type.kotlin
#      ^^^^^^^^^^^^ source.kotlin meta.class.kotlin
#                  ^ source.kotlin meta.class.kotlin keyword.operator.declaration.kotlin
#                   ^ source.kotlin meta.class.kotlin
#                    ^^^^ source.kotlin meta.class.kotlin entity.other.inherited-class.kotlin
#                        ^ source.kotlin meta.class.kotlin punctuation.section.group.begin.kotlin
#                         ^ source.kotlin meta.class.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>// #region annotation
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>@file:JvmName("Foo")
#^^^^^^^^^^^^^ source.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#             ^ source.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.begin.kotlin
#              ^ source.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#               ^^^ source.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin
#                  ^ source.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                   ^ source.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
>private sealed class InjectedClass<T, U> @Inject constructor(val test: Int = 50, var anotherVar: String = "hello world") : SomeSuperClass(test, anotherVar) {
#^^^^^^^ source.kotlin storage.modifier.kotlin
#       ^ source.kotlin
#        ^^^^^^ source.kotlin storage.modifier.kotlin
#              ^ source.kotlin
#               ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#                    ^ source.kotlin meta.class.kotlin
#                     ^^^^^^^^^^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                                  ^ source.kotlin meta.class.kotlin keyword.operator.comparison.kotlin
#                                   ^ source.kotlin meta.class.kotlin entity.name.type.class.kotlin
#                                    ^ source.kotlin meta.class.kotlin punctuation.seperator.kotlin
#                                     ^ source.kotlin meta.class.kotlin
#                                      ^ source.kotlin meta.class.kotlin entity.name.type.class.kotlin
#                                       ^ source.kotlin meta.class.kotlin keyword.operator.comparison.kotlin
#                                        ^ source.kotlin meta.class.kotlin
#                                         ^^^^^^^ source.kotlin meta.class.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                                                ^ source.kotlin meta.class.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                                                 ^^^^^^^^^^^ source.kotlin meta.class.kotlin entity.name.function.constructor
#                                                            ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                                             ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                                                ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                 ^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                                     ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                                      ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                       ^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                                                          ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                           ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.assignment.kotlin
#                                                                            ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                             ^^ source.kotlin meta.class.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#                                                                               ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                                                                ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                                 ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                                                                    ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                                     ^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                                                               ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                                                                ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                                                 ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                                                                                       ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                                                        ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.assignment.kotlin
#                                                                                                         ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                                                                          ^ source.kotlin meta.class.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                                                                                           ^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin string.quoted.double.kotlin
#                                                                                                                      ^ source.kotlin meta.class.kotlin meta.group.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                                                                                                       ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                                                                                        ^ source.kotlin meta.class.kotlin
#                                                                                                                         ^ source.kotlin meta.class.kotlin keyword.operator.declaration.kotlin
#                                                                                                                          ^ source.kotlin meta.class.kotlin
#                                                                                                                           ^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin entity.other.inherited-class.kotlin
#                                                                                                                                         ^ source.kotlin meta.class.kotlin punctuation.section.group.begin.kotlin
#                                                                                                                                          ^^^^ source.kotlin meta.class.kotlin
#                                                                                                                                              ^ source.kotlin meta.class.kotlin punctuation.seperator.kotlin
#                                                                                                                                               ^^^^^^^^^^^ source.kotlin meta.class.kotlin
#                                                                                                                                                          ^ source.kotlin meta.class.kotlin punctuation.section.group.end.kotlin
#                                                                                                                                                           ^ source.kotlin meta.class.kotlin
#                                                                                                                                                            ^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>
>    init {
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^^ source.kotlin meta.class.kotlin meta.block.kotlin entity.name.function.constructor
#        ^ source.kotlin meta.class.kotlin meta.block.kotlin
#         ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>        //
#^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#        ^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
>    }
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>    constructor(param1: String, param2: Int): this(param1, param2) {
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin entity.name.function.constructor
#               ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                      ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                       ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin
#                        ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin support.class.kotlin
#                              ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                               ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin
#                                ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                      ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                       ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin
#                                        ^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin support.class.kotlin
#                                           ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                            ^ source.kotlin meta.class.kotlin meta.block.kotlin keyword.operator.declaration.kotlin
#                                             ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                                              ^^^^ source.kotlin meta.class.kotlin meta.block.kotlin variable.language.kotlin
#                                                  ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                                   ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin
#                                                         ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                                                          ^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin
#                                                                 ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                                  ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                                                                   ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>        //
#^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#        ^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
>    }
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>    companion object {
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin
#    ^^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin storage.type.kotlin
#             ^ source.kotlin meta.class.kotlin meta.block.kotlin
#              ^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin storage.type.kotlin
#                    ^ source.kotlin meta.class.kotlin meta.block.kotlin
#                     ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>        //
#^^^^^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#        ^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
>    }
#^^^^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin
#    ^ source.kotlin meta.class.kotlin meta.block.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>}
#^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>annotation class Suspendable
#^^^^^^^^^^ source.kotlin storage.modifier.kotlin
#          ^ source.kotlin
#           ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#                ^ source.kotlin meta.class.kotlin
#                 ^^^^^^^^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
>val f = @Suspendable { Fiber.sleep(10) }
#^^^ source.kotlin storage.type.kotlin
#   ^^^ source.kotlin
#      ^ source.kotlin keyword.operator.assignment.kotlin
#       ^ source.kotlin
#        ^^^^^^^^^^^^ source.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                    ^ source.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                     ^ source.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
#                      ^ source.kotlin meta.block.kotlin
#                       ^^^^^ source.kotlin meta.block.kotlin entity.name.type.class.kotlin
#                            ^ source.kotlin meta.block.kotlin punctuation.accessor.dot.kotlin
#                             ^^^^^ source.kotlin meta.block.kotlin
#                                  ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                                   ^^ source.kotlin meta.block.kotlin meta.group.kotlin constant.numeric.integer.kotlin
#                                     ^ source.kotlin meta.block.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                      ^ source.kotlin meta.block.kotlin
#                                       ^ source.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>// #endregion
#^^ source.kotlin comment.line.double-slash.kotlin punctuation.definition.comment.kotlin
#  ^^^^^^^^^^^^ source.kotlin comment.line.double-slash.kotlin
>
>
>private data class Foo(
#^^^^^^^ source.kotlin storage.modifier.kotlin
#       ^ source.kotlin
#        ^^^^ source.kotlin storage.type.kotlin
#            ^ source.kotlin
#             ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#                  ^ source.kotlin meta.class.kotlin
#                   ^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                      ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
>    /**
#^^^^ source.kotlin meta.class.kotlin meta.group.kotlin
#    ^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin punctuation.definition.comment.kotlin
#      ^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin
>     * ```
#^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin
>     * ($)
#^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin
>     * ```
#^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin
>     */
#^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin
#     ^^ source.kotlin meta.class.kotlin meta.group.kotlin comment.block.kotlin punctuation.definition.comment.kotlin
>    val variables: Map<String, String>
#^^^^ source.kotlin meta.class.kotlin meta.group.kotlin
#    ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#       ^ source.kotlin meta.class.kotlin meta.group.kotlin
#        ^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                 ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                  ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                   ^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                      ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
#                       ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                             ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.seperator.kotlin
#                              ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                               ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                     ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.comparison.kotlin
>)
#^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
>
>data class Response(@SerializedName("param1") val param1: String,
#^^^^ source.kotlin storage.type.kotlin
#    ^ source.kotlin
#     ^^^^^ source.kotlin meta.class.kotlin storage.modifier.kotlin
#          ^ source.kotlin meta.class.kotlin
#           ^^^^^^^^ source.kotlin meta.class.kotlin entity.name.class.kotlin
#                   ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.begin.kotlin
#                    ^^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.begin.kotlin
#                                    ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                     ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin
#                                           ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                            ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                                             ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                              ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                                 ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                  ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                        ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                         ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                          ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                                                ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.seperator.kotlin
>                    @SerializedName("param2") val param2: String,
#^^^^^^^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin
#                    ^^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.begin.kotlin
#                                    ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                     ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin
#                                           ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                            ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                                             ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                              ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                                 ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                  ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                        ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                         ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                          ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                                                ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.seperator.kotlin
>                    @SerializedName("param3") val param3: String) {
#^^^^^^^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin
#                    ^^^^^^^^^^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin storage.type.annotation.kotlin
#                                   ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.begin.kotlin
#                                    ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.begin.kotlin
#                                     ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin
#                                           ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin string.quoted.double.kotlin punctuation.definition.string.end.kotlin
#                                            ^ source.kotlin meta.class.kotlin meta.group.kotlin meta.declaration.annotation.kotlin punctuation.definition.annotation-arguments.end.kotlin
#                                             ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                              ^^^ source.kotlin meta.class.kotlin meta.group.kotlin storage.type.kotlin
#                                                 ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                  ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin variable.parameter.function.kotlin
#                                                        ^ source.kotlin meta.class.kotlin meta.group.kotlin keyword.operator.declaration.kotlin
#                                                         ^ source.kotlin meta.class.kotlin meta.group.kotlin
#                                                          ^^^^^^ source.kotlin meta.class.kotlin meta.group.kotlin support.class.kotlin
#                                                                ^ source.kotlin meta.class.kotlin meta.group.kotlin punctuation.section.group.end.kotlin
#                                                                 ^ source.kotlin meta.class.kotlin
#                                                                  ^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.begin.kotlin
>}
#^ source.kotlin meta.class.kotlin meta.block.kotlin punctuation.section.group.end.kotlin
>
>
>